defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: 'circleci/openjdk:8-jdk-browsers'

node-defaults: &node-defaults
  docker:
    - image: circleci/node:10

docker-defaults: &docker-defaults
  docker:
    - image: docker:17.05.0-ce-git


version: 2
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  build-node:
    <<: *node-defaults
    steps:
      - attach_workspace:
          at: ~/repo
      
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Setup Dependencies
          command: npm install
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run Build
          command: npm build  
      - run: npx semantic-release --debug

  build-maven:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          key: circleci-challenge-{{ checksum "pom.xml" }}
      - run:
          name: Maven Dependency go-offline
          command: |
                  mvn dependency:go-offline     
      - save_cache:
          paths:
            - ~/.m2
          key: circleci-challenge-{{ checksum "pom.xml" }}
      - run:
          name: Maven Build and Test
          command: |
            mvn package -B
      - run:
          name: Copy deployment artifacts to workspace
          command: |
            cp target/${CIRCLE_PROJECT_REPONAME}-*.jar ~/repo/person-service.jar
            cp target/zerocode-*.csv ~/repo
            cp target/zerocode-*.html ~/repo
            cp -R target/zerocode-test-reports ~/repo
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: ~/repo/person-service.jar
      - store_artifacts:
          path: target/zerocode-test-reports
      - store_artifacts:
          path: target/zerocode-junit-interactive-fuzzy-search.html
      - persist_to_workspace:
          root: ~/repo
          paths:
            - zerocode-test-reports
            - zerocode-junit-interactive-fuzzy-search.html
            - person-service.jar
            
  release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - checkout
      - run: |
          echo "not implemented" 
          ls -la
 

  docker-build-push:
    <<: *docker-defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      - deploy:
          name: Build and Push Docker Image
          command: |
            cp ~/repo/$CIRCLE_PROJECT_REPONAME.jar .
            TAG=${CIRCLE_SHA1}
             if [ "${CIRCLE_BRANCH}" == "master" ]; then
               TAG=latest
             else
               TAG=${CIRCLE_BRANCH}
             fi
             docker build --build-arg JAR_FILE=$CIRCLE_PROJECT_REPONAME.jar -t $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$TAG .
             docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
             docker push $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$TAG

workflows:
  version: 2
  build-and-release:
    jobs:
      - checkout_code
      - build-node:
          requires:
            - checkout_code
      - docker-build-push:
          requires:
            - build-node
      - release:
          requires:
            - build-node
          filters:
            branches:
              only: master


